// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: tuning.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_tuning_2eproto
#define GOOGLE_PROTOBUF_INCLUDED_tuning_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3021000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3021012 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata_lite.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_tuning_2eproto
PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct TableStruct_tuning_2eproto {
  static const uint32_t offsets[];
};
extern const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_tuning_2eproto;
namespace protobuf_msgs {
class TuningState;
struct TuningStateDefaultTypeInternal;
extern TuningStateDefaultTypeInternal _TuningState_default_instance_;
class TuningState_Parameter;
struct TuningState_ParameterDefaultTypeInternal;
extern TuningState_ParameterDefaultTypeInternal _TuningState_Parameter_default_instance_;
class TuningState_Parameter_NumberParameter;
struct TuningState_Parameter_NumberParameterDefaultTypeInternal;
extern TuningState_Parameter_NumberParameterDefaultTypeInternal _TuningState_Parameter_NumberParameter_default_instance_;
class TuningState_Parameter_StringParameter;
struct TuningState_Parameter_StringParameterDefaultTypeInternal;
extern TuningState_Parameter_StringParameterDefaultTypeInternal _TuningState_Parameter_StringParameter_default_instance_;
}  // namespace protobuf_msgs
PROTOBUF_NAMESPACE_OPEN
template<> ::protobuf_msgs::TuningState* Arena::CreateMaybeMessage<::protobuf_msgs::TuningState>(Arena*);
template<> ::protobuf_msgs::TuningState_Parameter* Arena::CreateMaybeMessage<::protobuf_msgs::TuningState_Parameter>(Arena*);
template<> ::protobuf_msgs::TuningState_Parameter_NumberParameter* Arena::CreateMaybeMessage<::protobuf_msgs::TuningState_Parameter_NumberParameter>(Arena*);
template<> ::protobuf_msgs::TuningState_Parameter_StringParameter* Arena::CreateMaybeMessage<::protobuf_msgs::TuningState_Parameter_StringParameter>(Arena*);
PROTOBUF_NAMESPACE_CLOSE
namespace protobuf_msgs {

// ===================================================================

class TuningState_Parameter_NumberParameter final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:protobuf_msgs.TuningState.Parameter.NumberParameter) */ {
 public:
  inline TuningState_Parameter_NumberParameter() : TuningState_Parameter_NumberParameter(nullptr) {}
  ~TuningState_Parameter_NumberParameter() override;
  explicit PROTOBUF_CONSTEXPR TuningState_Parameter_NumberParameter(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  TuningState_Parameter_NumberParameter(const TuningState_Parameter_NumberParameter& from);
  TuningState_Parameter_NumberParameter(TuningState_Parameter_NumberParameter&& from) noexcept
    : TuningState_Parameter_NumberParameter() {
    *this = ::std::move(from);
  }

  inline TuningState_Parameter_NumberParameter& operator=(const TuningState_Parameter_NumberParameter& from) {
    CopyFrom(from);
    return *this;
  }
  inline TuningState_Parameter_NumberParameter& operator=(TuningState_Parameter_NumberParameter&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const TuningState_Parameter_NumberParameter& default_instance() {
    return *internal_default_instance();
  }
  static inline const TuningState_Parameter_NumberParameter* internal_default_instance() {
    return reinterpret_cast<const TuningState_Parameter_NumberParameter*>(
               &_TuningState_Parameter_NumberParameter_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(TuningState_Parameter_NumberParameter& a, TuningState_Parameter_NumberParameter& b) {
    a.Swap(&b);
  }
  inline void Swap(TuningState_Parameter_NumberParameter* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(TuningState_Parameter_NumberParameter* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  TuningState_Parameter_NumberParameter* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<TuningState_Parameter_NumberParameter>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const TuningState_Parameter_NumberParameter& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const TuningState_Parameter_NumberParameter& from) {
    TuningState_Parameter_NumberParameter::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(TuningState_Parameter_NumberParameter* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "protobuf_msgs.TuningState.Parameter.NumberParameter";
  }
  protected:
  explicit TuningState_Parameter_NumberParameter(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kKeyFieldNumber = 1,
    kValueFieldNumber = 2,
  };
  // string key = 1;
  void clear_key();
  const std::string& key() const;
  template <typename ArgT0 = const std::string&, typename... ArgT>
  void set_key(ArgT0&& arg0, ArgT... args);
  std::string* mutable_key();
  PROTOBUF_NODISCARD std::string* release_key();
  void set_allocated_key(std::string* key);
  private:
  const std::string& _internal_key() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_key(const std::string& value);
  std::string* _internal_mutable_key();
  public:

  // float value = 2;
  void clear_value();
  float value() const;
  void set_value(float value);
  private:
  float _internal_value() const;
  void _internal_set_value(float value);
  public:

  // @@protoc_insertion_point(class_scope:protobuf_msgs.TuningState.Parameter.NumberParameter)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr key_;
    float value_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_tuning_2eproto;
};
// -------------------------------------------------------------------

class TuningState_Parameter_StringParameter final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:protobuf_msgs.TuningState.Parameter.StringParameter) */ {
 public:
  inline TuningState_Parameter_StringParameter() : TuningState_Parameter_StringParameter(nullptr) {}
  ~TuningState_Parameter_StringParameter() override;
  explicit PROTOBUF_CONSTEXPR TuningState_Parameter_StringParameter(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  TuningState_Parameter_StringParameter(const TuningState_Parameter_StringParameter& from);
  TuningState_Parameter_StringParameter(TuningState_Parameter_StringParameter&& from) noexcept
    : TuningState_Parameter_StringParameter() {
    *this = ::std::move(from);
  }

  inline TuningState_Parameter_StringParameter& operator=(const TuningState_Parameter_StringParameter& from) {
    CopyFrom(from);
    return *this;
  }
  inline TuningState_Parameter_StringParameter& operator=(TuningState_Parameter_StringParameter&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const TuningState_Parameter_StringParameter& default_instance() {
    return *internal_default_instance();
  }
  static inline const TuningState_Parameter_StringParameter* internal_default_instance() {
    return reinterpret_cast<const TuningState_Parameter_StringParameter*>(
               &_TuningState_Parameter_StringParameter_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  friend void swap(TuningState_Parameter_StringParameter& a, TuningState_Parameter_StringParameter& b) {
    a.Swap(&b);
  }
  inline void Swap(TuningState_Parameter_StringParameter* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(TuningState_Parameter_StringParameter* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  TuningState_Parameter_StringParameter* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<TuningState_Parameter_StringParameter>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const TuningState_Parameter_StringParameter& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const TuningState_Parameter_StringParameter& from) {
    TuningState_Parameter_StringParameter::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(TuningState_Parameter_StringParameter* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "protobuf_msgs.TuningState.Parameter.StringParameter";
  }
  protected:
  explicit TuningState_Parameter_StringParameter(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kKeyFieldNumber = 1,
    kValueFieldNumber = 2,
  };
  // string key = 1;
  void clear_key();
  const std::string& key() const;
  template <typename ArgT0 = const std::string&, typename... ArgT>
  void set_key(ArgT0&& arg0, ArgT... args);
  std::string* mutable_key();
  PROTOBUF_NODISCARD std::string* release_key();
  void set_allocated_key(std::string* key);
  private:
  const std::string& _internal_key() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_key(const std::string& value);
  std::string* _internal_mutable_key();
  public:

  // string value = 2;
  void clear_value();
  const std::string& value() const;
  template <typename ArgT0 = const std::string&, typename... ArgT>
  void set_value(ArgT0&& arg0, ArgT... args);
  std::string* mutable_value();
  PROTOBUF_NODISCARD std::string* release_value();
  void set_allocated_value(std::string* value);
  private:
  const std::string& _internal_value() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_value(const std::string& value);
  std::string* _internal_mutable_value();
  public:

  // @@protoc_insertion_point(class_scope:protobuf_msgs.TuningState.Parameter.StringParameter)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr key_;
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr value_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_tuning_2eproto;
};
// -------------------------------------------------------------------

class TuningState_Parameter final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:protobuf_msgs.TuningState.Parameter) */ {
 public:
  inline TuningState_Parameter() : TuningState_Parameter(nullptr) {}
  ~TuningState_Parameter() override;
  explicit PROTOBUF_CONSTEXPR TuningState_Parameter(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  TuningState_Parameter(const TuningState_Parameter& from);
  TuningState_Parameter(TuningState_Parameter&& from) noexcept
    : TuningState_Parameter() {
    *this = ::std::move(from);
  }

  inline TuningState_Parameter& operator=(const TuningState_Parameter& from) {
    CopyFrom(from);
    return *this;
  }
  inline TuningState_Parameter& operator=(TuningState_Parameter&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const TuningState_Parameter& default_instance() {
    return *internal_default_instance();
  }
  enum ParameterCase {
    kNumber = 1,
    kString = 3,
    PARAMETER_NOT_SET = 0,
  };

  static inline const TuningState_Parameter* internal_default_instance() {
    return reinterpret_cast<const TuningState_Parameter*>(
               &_TuningState_Parameter_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  friend void swap(TuningState_Parameter& a, TuningState_Parameter& b) {
    a.Swap(&b);
  }
  inline void Swap(TuningState_Parameter* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(TuningState_Parameter* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  TuningState_Parameter* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<TuningState_Parameter>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const TuningState_Parameter& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const TuningState_Parameter& from) {
    TuningState_Parameter::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(TuningState_Parameter* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "protobuf_msgs.TuningState.Parameter";
  }
  protected:
  explicit TuningState_Parameter(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef TuningState_Parameter_NumberParameter NumberParameter;
  typedef TuningState_Parameter_StringParameter StringParameter;

  // accessors -------------------------------------------------------

  enum : int {
    kNumberFieldNumber = 1,
    kStringFieldNumber = 3,
  };
  // .protobuf_msgs.TuningState.Parameter.NumberParameter number = 1;
  bool has_number() const;
  private:
  bool _internal_has_number() const;
  public:
  void clear_number();
  const ::protobuf_msgs::TuningState_Parameter_NumberParameter& number() const;
  PROTOBUF_NODISCARD ::protobuf_msgs::TuningState_Parameter_NumberParameter* release_number();
  ::protobuf_msgs::TuningState_Parameter_NumberParameter* mutable_number();
  void set_allocated_number(::protobuf_msgs::TuningState_Parameter_NumberParameter* number);
  private:
  const ::protobuf_msgs::TuningState_Parameter_NumberParameter& _internal_number() const;
  ::protobuf_msgs::TuningState_Parameter_NumberParameter* _internal_mutable_number();
  public:
  void unsafe_arena_set_allocated_number(
      ::protobuf_msgs::TuningState_Parameter_NumberParameter* number);
  ::protobuf_msgs::TuningState_Parameter_NumberParameter* unsafe_arena_release_number();

  // .protobuf_msgs.TuningState.Parameter.StringParameter string = 3;
  bool has_string() const;
  private:
  bool _internal_has_string() const;
  public:
  void clear_string();
  const ::protobuf_msgs::TuningState_Parameter_StringParameter& string() const;
  PROTOBUF_NODISCARD ::protobuf_msgs::TuningState_Parameter_StringParameter* release_string();
  ::protobuf_msgs::TuningState_Parameter_StringParameter* mutable_string();
  void set_allocated_string(::protobuf_msgs::TuningState_Parameter_StringParameter* string);
  private:
  const ::protobuf_msgs::TuningState_Parameter_StringParameter& _internal_string() const;
  ::protobuf_msgs::TuningState_Parameter_StringParameter* _internal_mutable_string();
  public:
  void unsafe_arena_set_allocated_string(
      ::protobuf_msgs::TuningState_Parameter_StringParameter* string);
  ::protobuf_msgs::TuningState_Parameter_StringParameter* unsafe_arena_release_string();

  void clear_parameter();
  ParameterCase parameter_case() const;
  // @@protoc_insertion_point(class_scope:protobuf_msgs.TuningState.Parameter)
 private:
  class _Internal;
  void set_has_number();
  void set_has_string();

  inline bool has_parameter() const;
  inline void clear_has_parameter();

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    union ParameterUnion {
      constexpr ParameterUnion() : _constinit_{} {}
        ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized _constinit_;
      ::protobuf_msgs::TuningState_Parameter_NumberParameter* number_;
      ::protobuf_msgs::TuningState_Parameter_StringParameter* string_;
    } parameter_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    uint32_t _oneof_case_[1];

  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_tuning_2eproto;
};
// -------------------------------------------------------------------

class TuningState final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:protobuf_msgs.TuningState) */ {
 public:
  inline TuningState() : TuningState(nullptr) {}
  ~TuningState() override;
  explicit PROTOBUF_CONSTEXPR TuningState(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  TuningState(const TuningState& from);
  TuningState(TuningState&& from) noexcept
    : TuningState() {
    *this = ::std::move(from);
  }

  inline TuningState& operator=(const TuningState& from) {
    CopyFrom(from);
    return *this;
  }
  inline TuningState& operator=(TuningState&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const TuningState& default_instance() {
    return *internal_default_instance();
  }
  static inline const TuningState* internal_default_instance() {
    return reinterpret_cast<const TuningState*>(
               &_TuningState_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  friend void swap(TuningState& a, TuningState& b) {
    a.Swap(&b);
  }
  inline void Swap(TuningState* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(TuningState* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  TuningState* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<TuningState>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const TuningState& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const TuningState& from) {
    TuningState::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(TuningState* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "protobuf_msgs.TuningState";
  }
  protected:
  explicit TuningState(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef TuningState_Parameter Parameter;

  // accessors -------------------------------------------------------

  enum : int {
    kDynamicParametersFieldNumber = 2,
    kTimestampFieldNumber = 1,
  };
  // repeated .protobuf_msgs.TuningState.Parameter dynamicParameters = 2;
  int dynamicparameters_size() const;
  private:
  int _internal_dynamicparameters_size() const;
  public:
  void clear_dynamicparameters();
  ::protobuf_msgs::TuningState_Parameter* mutable_dynamicparameters(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::protobuf_msgs::TuningState_Parameter >*
      mutable_dynamicparameters();
  private:
  const ::protobuf_msgs::TuningState_Parameter& _internal_dynamicparameters(int index) const;
  ::protobuf_msgs::TuningState_Parameter* _internal_add_dynamicparameters();
  public:
  const ::protobuf_msgs::TuningState_Parameter& dynamicparameters(int index) const;
  ::protobuf_msgs::TuningState_Parameter* add_dynamicparameters();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::protobuf_msgs::TuningState_Parameter >&
      dynamicparameters() const;

  // uint64 timestamp = 1;
  void clear_timestamp();
  uint64_t timestamp() const;
  void set_timestamp(uint64_t value);
  private:
  uint64_t _internal_timestamp() const;
  void _internal_set_timestamp(uint64_t value);
  public:

  // @@protoc_insertion_point(class_scope:protobuf_msgs.TuningState)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::protobuf_msgs::TuningState_Parameter > dynamicparameters_;
    uint64_t timestamp_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_tuning_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// TuningState_Parameter_NumberParameter

// string key = 1;
inline void TuningState_Parameter_NumberParameter::clear_key() {
  _impl_.key_.ClearToEmpty();
}
inline const std::string& TuningState_Parameter_NumberParameter::key() const {
  // @@protoc_insertion_point(field_get:protobuf_msgs.TuningState.Parameter.NumberParameter.key)
  return _internal_key();
}
template <typename ArgT0, typename... ArgT>
inline PROTOBUF_ALWAYS_INLINE
void TuningState_Parameter_NumberParameter::set_key(ArgT0&& arg0, ArgT... args) {
 
 _impl_.key_.Set(static_cast<ArgT0 &&>(arg0), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:protobuf_msgs.TuningState.Parameter.NumberParameter.key)
}
inline std::string* TuningState_Parameter_NumberParameter::mutable_key() {
  std::string* _s = _internal_mutable_key();
  // @@protoc_insertion_point(field_mutable:protobuf_msgs.TuningState.Parameter.NumberParameter.key)
  return _s;
}
inline const std::string& TuningState_Parameter_NumberParameter::_internal_key() const {
  return _impl_.key_.Get();
}
inline void TuningState_Parameter_NumberParameter::_internal_set_key(const std::string& value) {
  
  _impl_.key_.Set(value, GetArenaForAllocation());
}
inline std::string* TuningState_Parameter_NumberParameter::_internal_mutable_key() {
  
  return _impl_.key_.Mutable(GetArenaForAllocation());
}
inline std::string* TuningState_Parameter_NumberParameter::release_key() {
  // @@protoc_insertion_point(field_release:protobuf_msgs.TuningState.Parameter.NumberParameter.key)
  return _impl_.key_.Release();
}
inline void TuningState_Parameter_NumberParameter::set_allocated_key(std::string* key) {
  if (key != nullptr) {
    
  } else {
    
  }
  _impl_.key_.SetAllocated(key, GetArenaForAllocation());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (_impl_.key_.IsDefault()) {
    _impl_.key_.Set("", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:protobuf_msgs.TuningState.Parameter.NumberParameter.key)
}

// float value = 2;
inline void TuningState_Parameter_NumberParameter::clear_value() {
  _impl_.value_ = 0;
}
inline float TuningState_Parameter_NumberParameter::_internal_value() const {
  return _impl_.value_;
}
inline float TuningState_Parameter_NumberParameter::value() const {
  // @@protoc_insertion_point(field_get:protobuf_msgs.TuningState.Parameter.NumberParameter.value)
  return _internal_value();
}
inline void TuningState_Parameter_NumberParameter::_internal_set_value(float value) {
  
  _impl_.value_ = value;
}
inline void TuningState_Parameter_NumberParameter::set_value(float value) {
  _internal_set_value(value);
  // @@protoc_insertion_point(field_set:protobuf_msgs.TuningState.Parameter.NumberParameter.value)
}

// -------------------------------------------------------------------

// TuningState_Parameter_StringParameter

// string key = 1;
inline void TuningState_Parameter_StringParameter::clear_key() {
  _impl_.key_.ClearToEmpty();
}
inline const std::string& TuningState_Parameter_StringParameter::key() const {
  // @@protoc_insertion_point(field_get:protobuf_msgs.TuningState.Parameter.StringParameter.key)
  return _internal_key();
}
template <typename ArgT0, typename... ArgT>
inline PROTOBUF_ALWAYS_INLINE
void TuningState_Parameter_StringParameter::set_key(ArgT0&& arg0, ArgT... args) {
 
 _impl_.key_.Set(static_cast<ArgT0 &&>(arg0), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:protobuf_msgs.TuningState.Parameter.StringParameter.key)
}
inline std::string* TuningState_Parameter_StringParameter::mutable_key() {
  std::string* _s = _internal_mutable_key();
  // @@protoc_insertion_point(field_mutable:protobuf_msgs.TuningState.Parameter.StringParameter.key)
  return _s;
}
inline const std::string& TuningState_Parameter_StringParameter::_internal_key() const {
  return _impl_.key_.Get();
}
inline void TuningState_Parameter_StringParameter::_internal_set_key(const std::string& value) {
  
  _impl_.key_.Set(value, GetArenaForAllocation());
}
inline std::string* TuningState_Parameter_StringParameter::_internal_mutable_key() {
  
  return _impl_.key_.Mutable(GetArenaForAllocation());
}
inline std::string* TuningState_Parameter_StringParameter::release_key() {
  // @@protoc_insertion_point(field_release:protobuf_msgs.TuningState.Parameter.StringParameter.key)
  return _impl_.key_.Release();
}
inline void TuningState_Parameter_StringParameter::set_allocated_key(std::string* key) {
  if (key != nullptr) {
    
  } else {
    
  }
  _impl_.key_.SetAllocated(key, GetArenaForAllocation());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (_impl_.key_.IsDefault()) {
    _impl_.key_.Set("", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:protobuf_msgs.TuningState.Parameter.StringParameter.key)
}

// string value = 2;
inline void TuningState_Parameter_StringParameter::clear_value() {
  _impl_.value_.ClearToEmpty();
}
inline const std::string& TuningState_Parameter_StringParameter::value() const {
  // @@protoc_insertion_point(field_get:protobuf_msgs.TuningState.Parameter.StringParameter.value)
  return _internal_value();
}
template <typename ArgT0, typename... ArgT>
inline PROTOBUF_ALWAYS_INLINE
void TuningState_Parameter_StringParameter::set_value(ArgT0&& arg0, ArgT... args) {
 
 _impl_.value_.Set(static_cast<ArgT0 &&>(arg0), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:protobuf_msgs.TuningState.Parameter.StringParameter.value)
}
inline std::string* TuningState_Parameter_StringParameter::mutable_value() {
  std::string* _s = _internal_mutable_value();
  // @@protoc_insertion_point(field_mutable:protobuf_msgs.TuningState.Parameter.StringParameter.value)
  return _s;
}
inline const std::string& TuningState_Parameter_StringParameter::_internal_value() const {
  return _impl_.value_.Get();
}
inline void TuningState_Parameter_StringParameter::_internal_set_value(const std::string& value) {
  
  _impl_.value_.Set(value, GetArenaForAllocation());
}
inline std::string* TuningState_Parameter_StringParameter::_internal_mutable_value() {
  
  return _impl_.value_.Mutable(GetArenaForAllocation());
}
inline std::string* TuningState_Parameter_StringParameter::release_value() {
  // @@protoc_insertion_point(field_release:protobuf_msgs.TuningState.Parameter.StringParameter.value)
  return _impl_.value_.Release();
}
inline void TuningState_Parameter_StringParameter::set_allocated_value(std::string* value) {
  if (value != nullptr) {
    
  } else {
    
  }
  _impl_.value_.SetAllocated(value, GetArenaForAllocation());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (_impl_.value_.IsDefault()) {
    _impl_.value_.Set("", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:protobuf_msgs.TuningState.Parameter.StringParameter.value)
}

// -------------------------------------------------------------------

// TuningState_Parameter

// .protobuf_msgs.TuningState.Parameter.NumberParameter number = 1;
inline bool TuningState_Parameter::_internal_has_number() const {
  return parameter_case() == kNumber;
}
inline bool TuningState_Parameter::has_number() const {
  return _internal_has_number();
}
inline void TuningState_Parameter::set_has_number() {
  _impl_._oneof_case_[0] = kNumber;
}
inline void TuningState_Parameter::clear_number() {
  if (_internal_has_number()) {
    if (GetArenaForAllocation() == nullptr) {
      delete _impl_.parameter_.number_;
    }
    clear_has_parameter();
  }
}
inline ::protobuf_msgs::TuningState_Parameter_NumberParameter* TuningState_Parameter::release_number() {
  // @@protoc_insertion_point(field_release:protobuf_msgs.TuningState.Parameter.number)
  if (_internal_has_number()) {
    clear_has_parameter();
    ::protobuf_msgs::TuningState_Parameter_NumberParameter* temp = _impl_.parameter_.number_;
    if (GetArenaForAllocation() != nullptr) {
      temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
    }
    _impl_.parameter_.number_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::protobuf_msgs::TuningState_Parameter_NumberParameter& TuningState_Parameter::_internal_number() const {
  return _internal_has_number()
      ? *_impl_.parameter_.number_
      : reinterpret_cast< ::protobuf_msgs::TuningState_Parameter_NumberParameter&>(::protobuf_msgs::_TuningState_Parameter_NumberParameter_default_instance_);
}
inline const ::protobuf_msgs::TuningState_Parameter_NumberParameter& TuningState_Parameter::number() const {
  // @@protoc_insertion_point(field_get:protobuf_msgs.TuningState.Parameter.number)
  return _internal_number();
}
inline ::protobuf_msgs::TuningState_Parameter_NumberParameter* TuningState_Parameter::unsafe_arena_release_number() {
  // @@protoc_insertion_point(field_unsafe_arena_release:protobuf_msgs.TuningState.Parameter.number)
  if (_internal_has_number()) {
    clear_has_parameter();
    ::protobuf_msgs::TuningState_Parameter_NumberParameter* temp = _impl_.parameter_.number_;
    _impl_.parameter_.number_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void TuningState_Parameter::unsafe_arena_set_allocated_number(::protobuf_msgs::TuningState_Parameter_NumberParameter* number) {
  clear_parameter();
  if (number) {
    set_has_number();
    _impl_.parameter_.number_ = number;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:protobuf_msgs.TuningState.Parameter.number)
}
inline ::protobuf_msgs::TuningState_Parameter_NumberParameter* TuningState_Parameter::_internal_mutable_number() {
  if (!_internal_has_number()) {
    clear_parameter();
    set_has_number();
    _impl_.parameter_.number_ = CreateMaybeMessage< ::protobuf_msgs::TuningState_Parameter_NumberParameter >(GetArenaForAllocation());
  }
  return _impl_.parameter_.number_;
}
inline ::protobuf_msgs::TuningState_Parameter_NumberParameter* TuningState_Parameter::mutable_number() {
  ::protobuf_msgs::TuningState_Parameter_NumberParameter* _msg = _internal_mutable_number();
  // @@protoc_insertion_point(field_mutable:protobuf_msgs.TuningState.Parameter.number)
  return _msg;
}

// .protobuf_msgs.TuningState.Parameter.StringParameter string = 3;
inline bool TuningState_Parameter::_internal_has_string() const {
  return parameter_case() == kString;
}
inline bool TuningState_Parameter::has_string() const {
  return _internal_has_string();
}
inline void TuningState_Parameter::set_has_string() {
  _impl_._oneof_case_[0] = kString;
}
inline void TuningState_Parameter::clear_string() {
  if (_internal_has_string()) {
    if (GetArenaForAllocation() == nullptr) {
      delete _impl_.parameter_.string_;
    }
    clear_has_parameter();
  }
}
inline ::protobuf_msgs::TuningState_Parameter_StringParameter* TuningState_Parameter::release_string() {
  // @@protoc_insertion_point(field_release:protobuf_msgs.TuningState.Parameter.string)
  if (_internal_has_string()) {
    clear_has_parameter();
    ::protobuf_msgs::TuningState_Parameter_StringParameter* temp = _impl_.parameter_.string_;
    if (GetArenaForAllocation() != nullptr) {
      temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
    }
    _impl_.parameter_.string_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::protobuf_msgs::TuningState_Parameter_StringParameter& TuningState_Parameter::_internal_string() const {
  return _internal_has_string()
      ? *_impl_.parameter_.string_
      : reinterpret_cast< ::protobuf_msgs::TuningState_Parameter_StringParameter&>(::protobuf_msgs::_TuningState_Parameter_StringParameter_default_instance_);
}
inline const ::protobuf_msgs::TuningState_Parameter_StringParameter& TuningState_Parameter::string() const {
  // @@protoc_insertion_point(field_get:protobuf_msgs.TuningState.Parameter.string)
  return _internal_string();
}
inline ::protobuf_msgs::TuningState_Parameter_StringParameter* TuningState_Parameter::unsafe_arena_release_string() {
  // @@protoc_insertion_point(field_unsafe_arena_release:protobuf_msgs.TuningState.Parameter.string)
  if (_internal_has_string()) {
    clear_has_parameter();
    ::protobuf_msgs::TuningState_Parameter_StringParameter* temp = _impl_.parameter_.string_;
    _impl_.parameter_.string_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void TuningState_Parameter::unsafe_arena_set_allocated_string(::protobuf_msgs::TuningState_Parameter_StringParameter* string) {
  clear_parameter();
  if (string) {
    set_has_string();
    _impl_.parameter_.string_ = string;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:protobuf_msgs.TuningState.Parameter.string)
}
inline ::protobuf_msgs::TuningState_Parameter_StringParameter* TuningState_Parameter::_internal_mutable_string() {
  if (!_internal_has_string()) {
    clear_parameter();
    set_has_string();
    _impl_.parameter_.string_ = CreateMaybeMessage< ::protobuf_msgs::TuningState_Parameter_StringParameter >(GetArenaForAllocation());
  }
  return _impl_.parameter_.string_;
}
inline ::protobuf_msgs::TuningState_Parameter_StringParameter* TuningState_Parameter::mutable_string() {
  ::protobuf_msgs::TuningState_Parameter_StringParameter* _msg = _internal_mutable_string();
  // @@protoc_insertion_point(field_mutable:protobuf_msgs.TuningState.Parameter.string)
  return _msg;
}

inline bool TuningState_Parameter::has_parameter() const {
  return parameter_case() != PARAMETER_NOT_SET;
}
inline void TuningState_Parameter::clear_has_parameter() {
  _impl_._oneof_case_[0] = PARAMETER_NOT_SET;
}
inline TuningState_Parameter::ParameterCase TuningState_Parameter::parameter_case() const {
  return TuningState_Parameter::ParameterCase(_impl_._oneof_case_[0]);
}
// -------------------------------------------------------------------

// TuningState

// uint64 timestamp = 1;
inline void TuningState::clear_timestamp() {
  _impl_.timestamp_ = uint64_t{0u};
}
inline uint64_t TuningState::_internal_timestamp() const {
  return _impl_.timestamp_;
}
inline uint64_t TuningState::timestamp() const {
  // @@protoc_insertion_point(field_get:protobuf_msgs.TuningState.timestamp)
  return _internal_timestamp();
}
inline void TuningState::_internal_set_timestamp(uint64_t value) {
  
  _impl_.timestamp_ = value;
}
inline void TuningState::set_timestamp(uint64_t value) {
  _internal_set_timestamp(value);
  // @@protoc_insertion_point(field_set:protobuf_msgs.TuningState.timestamp)
}

// repeated .protobuf_msgs.TuningState.Parameter dynamicParameters = 2;
inline int TuningState::_internal_dynamicparameters_size() const {
  return _impl_.dynamicparameters_.size();
}
inline int TuningState::dynamicparameters_size() const {
  return _internal_dynamicparameters_size();
}
inline void TuningState::clear_dynamicparameters() {
  _impl_.dynamicparameters_.Clear();
}
inline ::protobuf_msgs::TuningState_Parameter* TuningState::mutable_dynamicparameters(int index) {
  // @@protoc_insertion_point(field_mutable:protobuf_msgs.TuningState.dynamicParameters)
  return _impl_.dynamicparameters_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::protobuf_msgs::TuningState_Parameter >*
TuningState::mutable_dynamicparameters() {
  // @@protoc_insertion_point(field_mutable_list:protobuf_msgs.TuningState.dynamicParameters)
  return &_impl_.dynamicparameters_;
}
inline const ::protobuf_msgs::TuningState_Parameter& TuningState::_internal_dynamicparameters(int index) const {
  return _impl_.dynamicparameters_.Get(index);
}
inline const ::protobuf_msgs::TuningState_Parameter& TuningState::dynamicparameters(int index) const {
  // @@protoc_insertion_point(field_get:protobuf_msgs.TuningState.dynamicParameters)
  return _internal_dynamicparameters(index);
}
inline ::protobuf_msgs::TuningState_Parameter* TuningState::_internal_add_dynamicparameters() {
  return _impl_.dynamicparameters_.Add();
}
inline ::protobuf_msgs::TuningState_Parameter* TuningState::add_dynamicparameters() {
  ::protobuf_msgs::TuningState_Parameter* _add = _internal_add_dynamicparameters();
  // @@protoc_insertion_point(field_add:protobuf_msgs.TuningState.dynamicParameters)
  return _add;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::protobuf_msgs::TuningState_Parameter >&
TuningState::dynamicparameters() const {
  // @@protoc_insertion_point(field_list:protobuf_msgs.TuningState.dynamicParameters)
  return _impl_.dynamicparameters_;
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace protobuf_msgs

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // GOOGLE_PROTOBUF_INCLUDED_GOOGLE_PROTOBUF_INCLUDED_tuning_2eproto
